#!/usr/bin/env groovy

node {

	stage('Checkout') {
		checkout scm
	}

	def tasks = [:]
	tasks["Accumulo Tests"] = {
		stage('Accumulo Tests') {
			try {
				sh '''
					code=0
					{
						export option=accumulo
						source ci/createcluster.sh &&
						DOMAIN=`cat DOMAIN_${option}`
						CLUSTER_ID=`cat CLUSTER_ID_${option}`
						code=0
						sleep 3m #See if this wait prevents geowave not found issues.
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/startup.sh &&
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/runtests_accumulo.sh  &&
						remoteHOSTNAME=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/getHOSTNAME.sh) &&
						sudo npm install newman --global &&
						PATH=$(npm bin):$PATH newman run ci/Postman/collections/Geowave_Happypath.postman_collection.json \
							-e ci/Postman/environments/gw_accumulo.postman_environment.json \
							--timeout-request 60000 \
							--global-var "domain=${DOMAIN}" \
							--global-var "hostname=${remoteHOSTNAME}"
					} || {
						code=1
					}
					aws emr terminate-clusters --cluster-ids ${CLUSTER_ID} --region ${REGION}
					exit $code
				'''
			}
			catch (exc) {
				// slackSend color: 'danger', message: ':fire: The accumulo acceptance tests have failed :fire:'
				currentBuild.result = 'FAILURE'
			}
		}
	}
	tasks["HBase Tests"] = {
		stage('HBase Tests') {
			try {
				sh '''
					code=0
					{
						export option=hbase
						source ci/createcluster.sh &&
						DOMAIN=`cat DOMAIN_${option}`
						CLUSTER_ID=`cat CLUSTER_ID_${option}`
						code=0
						sleep 3m #See if this wait prevents geowave not found issues.
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/startup.sh &&
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/runtests_hbase.sh &&
						remoteHOSTNAME=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/getHOSTNAME.sh) &&
						sudo npm install newman --global &&
						PATH=$(npm bin):$PATH newman run ci/Postman/collections/Geowave_Happypath.postman_collection.json \
							-e ci/Postman/environments/gw_hbase.postman_environment.json \
							--timeout-request 60000 \
							--global-var "domain=${DOMAIN}" \
							--global-var "hostname=${remoteHOSTNAME}"
					} || {
						code=1
					}
					aws emr terminate-clusters --cluster-ids ${CLUSTER_ID} --region ${REGION}
					exit $code
				'''
			}
			catch (exc) {
				// slackSend color: 'danger', message: ':fire: The hbase acceptance tests have failed :fire:'
				currentBuild.result = 'FAILURE'
			}
		}
	}
	tasks["Jupyter Notebook Tests"] = {
		stage('Jupyter Notebook Tests') {
			try {
				sh '''
					code=0
					{
						export option=jupyter
						source ci/createcluster.sh &&
						DOMAIN=`cat DOMAIN_${option}`
						CLUSTER_ID=`cat CLUSTER_ID_${option}`
						code=0
						sleep 3m #See if this wait prevents geowave not found issues.
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/startup.sh &&
						ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/runtests_jupyter.sh &&
						remoteHOSTNAME=$(ssh -o StrictHostKeyChecking=no -i ~/.ssh/${KEYNAME}.pem hadoop@${DOMAIN} < ci/getHOSTNAME.sh)
					} || {
						code=1
					}
					aws emr terminate-clusters --cluster-ids ${CLUSTER_ID} --region ${REGION}
					exit $code
				'''
			}
			catch (exc) {
				// slackSend color: 'danger', message: ':fire: The jupyter notebook acceptance tests have failed :fire:'
				currentBuild.result = 'FAILURE'
			}
		}

	}

	parallel tasks
}